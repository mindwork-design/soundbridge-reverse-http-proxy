server {
    listen       80;
    # server_name  192.168.0.179;
    server_name  localhost;

    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    # general proxy location using RegExp
    location ~ ^/radio/(.*) {
        resolver 8.8.8.8 valid=30s;  # works somehow only with resolver, which could also be the docker internal resolver: 127.0.0.11 (not tested)
        proxy_pass https://$1;
        client_max_body_size 0;  # 0 disables checking client body size; could alternatively be 2m or 10m
        proxy_buffering off;

        # handle responses containing m3u playlists (content-type audio/x-mpegurl, etc)
        # returned for example by this address: https://stream.absolutradio.de/lq/mp3/Fritzbox.m3u

        # in case of m3u responses / playlist files (and also html and text responses), rewrite urls in the response body:
        sub_filter 'https://'  'http://localhost/radio/';
        sub_filter_types  text/html text/plain audio/x-mpegurl audio/mpegurl, application/m3u, audio/x-mp3-playlist, audio/m3u, audio/x-m3u;
        sub_filter_once off;

        # avoid error "SSL_do_handshake() failed...", which might be a special case concerning the tested host (stream.absolutradio.de),
        # see https://stackoverflow.com/questions/25329941/nginx-caching-proxy-fails-with-ssl23-get-server-hellosslv3-alert-handshake-fail/25330027#25330027
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2;
    }

    # http stream, WORKS with vlc!
    location /radioX/ice55 {
        proxy_pass http://ice55.securenetsystems.net/DASH22;
        client_max_body_size 0;  # 0 disables checking client body size; could alternatively be 2m or 10m
        proxy_buffering off;
    }

    # https stream, WORKS with vlc
    location /radioX/trip-hop {
        proxy_pass https://radio-stream-0.obozrevatel.com/trip-hop128.mp3;
        client_max_body_size 0;  # 0 disables checking client body size; could alternatively be 2m or 10m
        proxy_buffering off;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
